{% extends "TisseoBoaBundle::datatable_list_stops.html.twig" %}

{% import "TisseoBoaBundle::macros.html.twig" as render %}


{% block main_content -%}
    <style>
        #Route_creer {
            display: none;
        }

        th.trip-cols {
            border: 1px solid #ccc;
        }
    </style>

    <div class="container-routestop ">
        {% for flashMessage in app.session.flashbag.get('modification') %}
            <div class="flash-notice">
                {{ flashMessage }}
            </div>
        {% endfor %}
        <div class="row">
            <div class="col-md-12" role="main">

                <hr/>
                <input type="hidden" id="routeId" value="{{ id }}"/>

                <div id="formRoute">
                    {{ form_start(form) }}
                    {{ form_row(form.name) }}
                    {{ form_row(form.way) }}
                    {{ form_row(form.direction) }}

                    <table id="routeTable" class="table datatable table-hover dataTable no-footer">

                        <thead>
                        <tr id="headRstops">
                            <th colspan="6">Détail de la route</th>
                            <th>Services</th>
                        </tr>
                        <tr id="heading">
                            <th class="idRS col-sm-1">id</th>
                            <th class="col-sm-1">Ordre</th>
                            <th class="col-sm-1">Ville</th>
                            <th class="col-sm-1">Nom arrêt</th>
                            <th class="col-sm-1">Num arrêt</th>
                            <th class="col-sm-1">Descente inter</th>
                            <th class="col-sm-1">Montee inter</th>
                            {%  set trips_name = [] %}
                            {% for trip in trips %}

                                {% set trips_name = trips_name|merge([trip.name]) %}

                                {% if isZone == true %}

                                <th colspan="2">{{ trip.name }}</th>
                                    {% else %}
                                        <th>{{ trip.name }}</th>
                                {% endif %}
                            {%  endfor %}

                        </tr>
                        </thead>

                        {% if is_granted('BUSINESS_MANAGE_ROUTES') %}
                        {% block table_head %}

                        {% endblock %}

                        {%  set cpt = 0 %}


                        <tbody class="ui-sorting" data-prototype="{{ form_widget(form.routeStops.vars.prototype)|e }}">
                            {%  for routestop in form.routeStops %}
                                <tr>
                                    <td style="display:none">  {{  form_row(routestop.id) }}</td>
                                    <td>  {{  form_widget(routestop.rank) }}</td>
                                    <td></td>
                                    <td>
                                      {% if isZone == true %}{##}
                                            {{ routestop.vars.value.waypoint.odtArea.name }}
                                             {% else %}
                                                 {{ routestop.vars.value.waypoint.stop.stopArea.longName }}
                                        {%  endif %}

                                    </td>
                                    <td>
                                      {% if isZone == true %}
                                            zone
                                            {%  else %}

                                        {% endif %}
                                    </td>
                                    <td> {{ form_widget(routestop.dropOff)}}</td>
                                    <td> {{ form_widget(routestop.pickup )}} </td>


                                </tr>

                            {%  endfor %}


                        </tbody>


                        {% block table_body -%}


                        {% endblock %}

                    </table>

                    {% block list_pagination -%}{% endblock %}
                    {{  form_widget(form._token) }}
                <input type="submit" value="Valider" name="Route_creer" id="validRoute" class="btn btn-primary"/>




                    {% endif %}


                </div>

            </div>
        </div>

    </div>



{% endblock %}


{% block javascripts %}
    {{ parent() }}

    <script>
        require(['jquery', 'textfill'], function ($) {
            $(document).ready(function () {
                var countServices = $("#servicesCount").val();

                idRoute = $("#routeId").val();

            });
        });

        require(['jquery', 'jquery_ui_droppable', 'jquery_ui_draggable', 'jquery_ui_sortable', 'jquery_ui_autocomplete'], function ($) {
            function displayError(responseText) {
                document.open();
                document.write(responseText);
                document.close();
            }

            var $addTagLink = $('<div class="add_routestop_link">Ajouter un arret</div>');
            var $routeStopsHolder = $('tbody');
            $('tbody').append($addTagLink);

            $(document).ready(function () {

                var size = 0;
                var stopTimes = [];
                var sizeO = [];
                var servicesA = [];
                var isZone;
                var stptimes= [];
                var prevstptimes = {};
                table = $("#routeTable");

                (function($){

                    $.fn.getRouteStops = function() {
                        alert('routestop or service updated');
                        return this;
                    };

                    $.fn.ajaxRouteStops = function() {

                        var departures = [];
                        var indexo = 0;
                        var index = 0;
                        var cpt = -1;
                        var departure = [];
                        var indexRoutestop;
                        $.ajax({
                            url: "{{ path('tisseo_boa_json_route_services') }}",
                            dataType: "json",
                            type: 'POST',
                            data: {routeId: $("#routeId").val()}
                        }).success(function (data) {

                            $.each(JSON.parse(data.content),function(key,obj){

                                if( typeof (obj.iszone) !="undefined"){
                                    isZone = obj.iszone;



                                }
                            });
                            $.map( $.parseJSON(data.content), function(item,value){

                                if (typeof (item.stoptimes) != "undefined") {

                                    valStptimes = [];
                                    valStptimes["trip"] = item.services;
                                    valStptimes["stoptimes"] = item.stoptimes;
                                    stopTimes.push(valStptimes);

                                }

                                if(typeof(item.code) != "undefined") {

                                    for(i=0;i<stopTimes.length;i++){

                                        indexo += 1;

                                        var prevStep = (stopTimes.length * 2) + 1;
                                        tripName = stopTimes[i]['trip'].toString();
                                        var tripPos = $("thead").find('th:contains("'+tripName+'")').index();

                                        $.each(stopTimes[i]["stoptimes"], function(stop, key){

                                            if (key.routestop == item.id) {

                                                 indexRoutestop = $(':input[value="'+key.routestop+'"]').parent().parent().parent().index();
                                                console.log(indexRoutestop);
                                                if (item.rank == 1) {
                                                    departure.push("<td class='timeStop'>00:00</td>");
                                                }


                                                else {

                                                    if (isZone == false) {

                                                        current_value = key.arrivalTime;

                                                        var timeStop = (parseInt(current_value) - parseInt(prevstptimes[tripName]));

                                                        hoursTime = parseInt(timeStop / 3600);
                                                        hoursTime = hoursTime < 10 ? "0" + hoursTime : hoursTime;
                                                        minutesTime = timeStop / 60;
                                                        minutesTime = minutesTime < 10 ? "0" + minutesTime : hoursTime;
                                                    }

                                                    departures.push(key.arrivalTime);

                                                    if (item.rank == 2) {
                                                        hoursTime = parseInt(key.arrivalTime / 3600);
                                                        hoursTime = hoursTime < 10 ? "0" + hoursTime : hoursTime;
                                                        minutesTime = parseInt(key.arrivalTime / 60);
                                                        minutesTime = minutesTime < 10 ? "0" + minutesTime : hoursTime;
                                                        departure = "<td class='timeStop' id='" + stopTimes[i]["trip"] +"'>" + hoursTime + ":" + minutesTime + "</td>";
                                                    }

                                                    if (item.rank > 2) {

                                                        if (isZone == false) {

                                                            departure = "<td class='timeStop' id='" + stopTimes[i]["trip"] + "' name='routestop[" + index + "][time]'>" + hoursTime + ":" + minutesTime + "</td>";

                                                        }


                                                        else {

                                                            departure.push("<td id= '" + stopTimes[i]["trip"] + "' name='routestop[" + index + "][timeDeparture]'>" + key.departureTime + "</td>" +
                                                            "<td name='routestop[" + index + "][timeArrival]>" + key.arrivalTime + "</td>");
                                                        }

                                                    }
                                                    $("tbody tr").eq(indexRoutestop).append(departure);




                                                    if (item.rank == Object.keys(item).length - 1) {
                                                        sizeO.push({"depart": key.departureTime});
                                                    }
                                                    prevstptimes[tripName] = parseInt(key.departureTime);

                                                }
                                            }
                                        });

                                    }


                                }

                            });
                        }) ;

                            {% for trip in trips %}
                            if ("{{ mode }}" == "TAD") {

                                servicesA.push('<td>'+'<input type="time" name="{{ trip.name }}" class="stptimes">'+'</td>');
                                servicesA.push('<td>'+'<input type="time" name="{{ trip.name }}" class="stptimes">'+'</td>');

                            }
                        else {
                                servicesA.push('<td>'+'<input type="time" name="{{ trip.name }}" class="stptimes">'+'</td>');

                            }

                            {% endfor %}

                           
                            $("#routeTable tbody").append(
                                    '<tr class="row" id="newStop"><td colspan="3"><input type="hidden" id="stop_id">' +
                                    '<input type="text" id="stop_search"  class="form-control" data-url="{{ path('tisseo_boa_json_stop') }}"></td><td><input type="checkbox" name="desc" id="descStop"></td>'+
                                    '<td><input type="checkbox" name="asc" id="upStop"></td>'+servicesA+'</tr>'
                            );
                            $('.container-routestop').append(
                                    '<div class="group">' +
                                    '<div class="btn btn-primary" id="add_rs"><span class="glyphicon glyphicon-plus">Ajouter</span></div>'+
                                    '<div class="btn btn-primary" id="cancel_rs"><span class="glyphicon glyphicon-minus">Annuler</span></div>'+
                                    '</div>'+
                                    '<div class="btn btn-primary" id="valid_rs"><span>Valider</span></div>'

                            );

                            $(".cc").click(function () {
                                var nameTrip = $(this).parent().html().split("<");
                                $.post("{{ path('tisseo_boa_trip_action') }}", {trip: nameTrip[0]}).success( function(data){
                                    $("thead").getRouteStops();
                                });

                            });


                            $("#stop_search").autocomplete({
                                source: function (request, response) {
                                    var objData = {term: request.term};
                                    var url = $(this.element).attr('data-url');

                                    $.ajax({
                                        url: url, dataType: "json", data: objData, type: 'POST',
                                        success: function (data) {

                                            response($.map(JSON.parse(data.content), function (item) {
                                                return {
                                                    label: item.name,
                                                    value: item.name,
                                                    id: item.id
                                                };
                                            }));
                                        }
                                    });
                                },
                                select: function (event, ui) {
                                    $("#stop_id").val(ui.item.id);
                                },
                                minLength: 3,
                                delay: 300
                            });

                            $("#add_rs").click(function () {

                                stptimes = [];
                                $('.stptimes').each(function (key, stoptimes) {

                                   if("{{ mode }}" == "TAD") {

                                       var Trip = {};

                                         if(key%2 == 0){
                                             Trip[$('.stptimes').eq(key).attr("name").toString()] = $('.stptimes').eq(key).val();
                                             stptimes.push(Trip);
                                        }
                                       else {
                                             Trip[$('.stptimes').eq(key).attr("name").toString()] = $('.stptimes').eq(key).val();
                                             stptimes.push(Trip);
                                        }
                                    }
                                    else {

                                        stptimes.push($('.stptimes').eq(key).val());
                                    }
                                $('.stptimes').eq(key).val()

                                });


                                positionStop = $("#routeTable tbody").find("tr").last().attr('id') != 'newStop' ? $("#routeTable tbody").find("tr").last().find("td").eq(1).html() : 0;



                                /*
                                 ** si on crée le premier stop ou la première zone
                                 */

                                var code = $('#stop_search').val().indexOf("(") == -1 ? "" : $('#stop_search').val().split("(") ;

                                if(code != ""){
                                    code = code[1].split(")");
                                    code = code[0];
                                }


                                var time = [];

                                Lastindex =  $("#routeTable tbody tr").length;
                                Lastindex = Lastindex == 1 ? 1 : parseInt(Lastindex);

                                $.each(stptimes,function(key,val){
                                    if("{{ mode }}" == "TAD") {
                                        $.each(val, function (key, val) {

                                            cpt++;
                                            time.push("<td><input type='hidden' name='routestop["+Lastindex+"][stoptimes]["+key+"]["+cpt+"]' value='"+
                                            val+"'>" + val + "</td>");

                                        });
                                    }
                                    else {

                                        time.push("<td>" + val + "</td>");
                                    }
                                });

                                $descStop = $('#descStop').is(':checked') == true ? "Oui" : "Non";
                                $upStop = $('#upStop').is(':checked') == true ? "Oui" : "Non";


                                    var routeStop = {
                                        name: $('#stop_search').val(),
                                        id:{{id}},
                                        descStop: $('#descStop').is(':checked'),
                                        upStop: $('#upStop').is(':checked'),
                                        stopId : $("#stop_id").val(),
                                        rank: positionStop,
                                        stoptimes: stptimes,

                                        isZone: "{{ mode }}"

                                    }

                                $("#routeTable tbody").append(
                                        "<tr><td><input type='hidden' class='idRS' name='routestop["+Lastindex+"][rank]' value='"+Lastindex+"'>"+Lastindex+"</td>"+
                                        "<input type='hidden' class='idRS' name='routestop["+Lastindex+"][stopid]' value='"+$("#stop_id").val()+"'>"+
                                        "<td colspan='2'><input type='hidden' name='routestop["+Lastindex+"][name]' value='"+$('#stop_search').val()+"'>"+$('#stop_search').val()+"</td>"+
                                        "<td><input type='hidden' name='routestop["+Lastindex+"][code]' value='"+code+"'>"+code+"</td>"+
                                        "<td><input type='hidden' name='routestop["+Lastindex+"][dropoff]' value='"+$descStop+"'>"+$descStop +"</td>"+
                                        "<input type='hidden' value='"+"{{ mode }}"+"'>"+
                                        "<td><input type='hidden' name='routestop["+Lastindex+"][pickup]' value='"+$upStop+"'>"+$upStop+"</td>"+
                                         time+"</tr>" );
                           });

                            $("form").click(function(e){
                                return false;

                                var form = $("form");
                                
                            });
                            $("#cancel_rs").click(function (){

                                $(".group").html("");
                                $('#routeTable').html("");
                               // voir pour recharger tableau //
                                $('thead').ajaxRouteStops();
                            });

                            $("#heading").append("<th></th><th><button class='add-SV btn btn-danger'>+</button></th>");

                        return this;
                    };
                    $.fn.loadTab = function() {

                         //$('thead').ajaxRouteStops();


                        return this;
                    }

                })(jQuery);


                $("thead").ajaxRouteStops();

                $.fn.liveDroppable = function () {
                    $(this).droppable({
                        over: function (event, ui) {

                        },
                        out: function (event, ui) {

                        },
                        drop: function (event, ui) {

                        }
                    });
                };

                $(document).find('#routeTable tbody').liveDroppable();

                var startPos;
                var endPos;
                var order;
                var orderUpdate;
                var startRow;
                var orders = [];


                $("#routeTable tbody").sortable({
                    cursor: "move",
                    start: function (event, ui) {
                        startPos = ui.item.prevAll().length + 1;

                        startRow = $("#routeTable tbody").find("tr").eq(startPos - 1);
                        order = startRow.find('td').eq(1).html();

                        orders = [];
                        orders.push(order);


                    },
                    update: function (event, ui) {

                        endPos = ui.item.prevAll().length + 1;

                        var endRow = $("#routeTable tbody").find("tr").eq(endPos - 1);
                        startRow = $("#routeTable tbody").find("tr").eq(startPos - 1);


                        if (endPos < startPos) {

                            var newPos = $("#routeTable tbody").find("tr").eq(endPos);

                            orderUpdate = newPos.find('td').eq(1).html();

                            endRow.find("td").eq(1).html(newPos.find('td').eq(1).html());

                            newPos.find("td").eq(1).html(orders[0]);

                        }

                        else if (endPos > startPos) {

                            var newPos = $("#routeTable tbody").find("tr").eq(endPos - 2);
                            orderUpdate = newPos.find('td').eq(1).html();

                            endRow.find("td").eq(1).html(newPos.find('td').eq(1).html());
                            newPos.find("td").eq(1).html(orders[0]);

                        }


                    }
                });

                $("#routeTable tbody").on('click', 'tr', function () {
                    $(this).toggleClass("selected");
                    $(this).draggable();
                })
            });


        });
    </script>
{% endblock %}
