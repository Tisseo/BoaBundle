{% extends "TisseoBoaBundle::datatable_list_stops.html.twig" %}

{% import "TisseoBoaBundle::macros.html.twig" as render %}


{% block main_content -%}
    <style>
        #Route_creer {
            display: none;
        }

        th.trip-cols {
            border: 1px solid #ccc;
        }
    </style>

    <div class="container-routestop ">
        <div class="row">
            <div class="col-md-12" role="main">

                <hr/>
                <input type="hidden" id="routeId" value="{{ id }}"/>

                <div id="formRoute">
                    {{ form_start(form) }}
                    {{ form_row(form.name) }}
                    {{ form_row(form.way) }}
                    {{ form_row(form.direction) }}
                    <input type="submit" value="editer" name="Route_creer" class="btn btn-primary"/>
                    {{ form_rest(form) }}
                    {{ form_end(form) }}
                </div>

            </div>
        </div>
        <table id="routeTable" class="table datatable table-hover dataTable no-footer">

            <thead>
            <tr id="headRstops">
                <th colspan="6">Détail de la route</th>
                <th colspan="11" id="colServices">Servcies type</th>
            </tr>
            <tr id="trips">
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>


            </tr>
            <tr id="heading">
                <th class="idRS col-sm-1">Id</th>
                <th class="col-sm-1">Ordre</th>
                <th class="col-sm-1">Ville</th>
                <th class="col-sm-1">Nom arrêt</th>
                <th class="col-sm-1">Num arrêt</th>
                <th class="col-sm-1">Descente inter</th>
                <th class="col-sm-1">Montee inter</th>

            </tr>
            </thead>

            {% if is_granted('BUSINESS_MANAGE_ROUTES') %}
            {% block table_head %}

            {% endblock %}


            <tbody class="ui-sorting">

            </tbody>
            {% block table_body -%}


            {% endblock %}

        </table>

        {% block list_pagination -%}{% endblock %}



        <button id="saveList" class="btn btn-default">Sauvegarder</button>

        {% endif %}
    </div>



{% endblock %}


{% block javascripts %}
    {{ parent() }}

    <script>
        require(['jquery', 'textfill'], function ($) {
            $(document).ready(function () {
                var countServices = $("#servicesCount").val();

                idRoute = $("#routeId").val();

            });
        });

        require(['jquery', 'jquery_ui_droppable', 'jquery_ui_draggable', 'jquery_ui_sortable', 'jquery_ui_autocomplete'], function ($) {
            function displayError(responseText) {
                document.open();
                document.write(responseText);
                document.close();
            }


            $(document).ready(function () {

                var size = 0;
                var stopTimes = [];
                var sizeO = [];
                var servicesA = [];
                var isZone;
                var stptimes= [];
                var prevstptimes = {};
                table = $("#routeTable");

                (function($){

                    $.fn.getRouteStops = function() {
                        alert('routestop or service updated');
                        return this;
                    };

                    $.fn.ajaxRouteStops = function(){

                        $.ajax({
                            url: "{{ path('tisseo_boa_json_route_services') }}",
                            type: 'POST',
                            dataType: 'json',
                            data: {routeId: $("#routeId").val()}
                        }).success(function (data) {


                            var departures = [];
                            var indexo = 0;
                            var index=0;
                            var cpt = 0;
                            $.each(JSON.parse(data.content),function(key,obj){

                                if( typeof (obj.iszone) !="undefined"){
                                    isZone = obj.iszone;

                                }
                            });
                           
                            $.map(JSON.parse(data.content), function (item) {

                                var stoptimes = item;
                                if (typeof (stoptimes.stoptimes) != "undefined") {

                                    valStptimes = [];
                                    valStptimes["trip"] = stoptimes.services;
                                    valStptimes["stoptimes"] = stoptimes.stoptimes;
                                    stopTimes.push(valStptimes);

                                }

                                if (typeof (item.services) != "undefined") {

                                    if ("{{ mode }}" == "TAD")
                                    {

                                        $("#heading").append("<th colspan='2'>" + item.services + "<button class='cc btn btn-primary'>" +
                                        "<div class='copy' id='first'></div><div class='copy'></div></button></th>");


                                        servicesA.push('<td>'+'<input type="time" name="'+item.services+'" class="stptimes">'+'</td>');
                                        servicesA.push('<td>'+'<input type="time" name="'+item.services+'" class="stptimes">'+'</td>');
                                    }

                                    else {

                                        $("#heading").append("<th>" + item.services + "<button class='cc btn btn-primary'>" +
                                        "<div class='copy' id='first'></div><div class='copy'></div></button></th>");
                                        servicesA.push('<td>'+'<input type="time" name="'+item.services+'" class="stptimes">'+'</td>');

                                    }

                                    $("#newStop").append('<td><input type="time" name="' + item.services + '" class="stptimes" pattern="" /></td>');
                                    $("#newStop").append('<input type="hidden" name="lastRank" value="' + size + 1 + '" />');



                                }

                                if (typeof (item.rank) != "undefined") {
                                    var departure = [];
                                    var times = [];
                                    var current_value = "";
                                    index++;

                                    for (i = 0; i < stopTimes.length; i++) {
                                        indexo += 1;

                                        var prevStep = (stopTimes.length * 2) + 1;
                                        tripName = stopTimes[i]['trip'].toString();
                                        var tripPos = $("thead").find('th:contains("'+tripName+'")').index();

                                        $.each(stopTimes[i]["stoptimes"], function (stop, key) {


                                            if (key.routestop == item.id) {


                                                if (item.rank == 1) {
                                                    departure.push("<td class='timeStop'>00:00</td>");
                                                }


                                                else {

                                                    if(isZone == false) {

                                                        current_value = key.arrivalTime;
                                                        var timeStop = (parseInt(current_value) - parseInt(prevstptimes[tripName]));
                                                        hoursTime = parseInt(timeStop/3600);
                                                        hoursTime = hoursTime < 10 ? "0" + hoursTime : hoursTime;
                                                        minutesTime = timeStop/60;
                                                        minutesTime = minutesTime < 10 ? "0" + minutesTime : hoursTime;
                                                }

                                                    departures.push(key.arrivalTime);

                                                    if (item.rank == 2) {
                                                        hoursTime = parseInt(key.arrivalTime/3600);
                                                        hoursTime = hoursTime < 10 ? "0" + hoursTime : hoursTime;
                                                        minutesTime = parseInt(key.arrivalTime/60);
                                                        minutesTime = minutesTime < 10 ? "0" + minutesTime : hoursTime;
                                                        departure[tripPos]="<td class='timeStop'>" + hoursTime + ":"+ minutesTime + "</td>";
                                                    }

                                                    if (item.rank > 2) {

                                                        if(isZone == false) {

                                                            departure[tripPos] = "<td class='timeStop' id='"+stopTimes[i]["trip"]+"' name='routestop["+index+"][time]'>" + hoursTime + ":"+ minutesTime +"</td>";

                                                        }

                                                        else {

                                                            departure.push("<td id= '"+stopTimes[i]["trip"]+"' name='routestop["+index+"][timeDeparture]'>" + key.departureTime +"</td>"+
                                                            "<td name='routestop["+index+"][timeArrival]>" + key.arrivalTime +"</td>" );
                                                        }
                                                    }

                                                    if (item.rank == Object.keys(item).length - 1) {
                                                        sizeO.push({"depart": key.departureTime});
                                                    }
                                                    prevstptimes[tripName] = parseInt(key.departureTime);

                                                }

                                            }
                                        });
                                    }




                                    var dropoff = item.dropOff == true ? "Oui" : "Non";
                                    var pickup = item.pickup == true ? "Oui" : "Non";



                                    $("#routeTable tbody").append(
                                            "<tr>" + "<td class='idRS' name='routestop["+index+"][id]'>" + item.id + "</td>" + "<td name='routestop["+index+"][rank]'>" + item.rank + "</td>" +
                                            "<td name='routestop["+index+"][city]'>" + item.city + "</td>" + "<td name='routestop["+index+"][name]'>" + item.name + "</td>" +
                                            "<td name='routestop["+index+"][code]'>" + item.code + "</td>" + "<td name='routestop["+index+"][dropoff]'>" + dropoff + "</td><td name='routestop["+index+"][pickup]'>" +
                                            pickup + "</td>"+departure+"<td><button class='del-rs btn btn-danger'>-</button></td>"+
                                            "</tr>");
                                }


                                $(".del-rs.btn.btn-danger").click(function () {
                                    var idRouteStop = $(this).parent().parent().find('td').eq(0).html();
                                    alert("idRoutestop"+idRouteStop);

                                });

                                if (typeof (item.stoptimes) != "undefined") {
                                    $.each(item.stoptimes, function (item, key) {
                                        if (key.routestop == item.id) {
                                        }
                                    });
                                }

                            });

                            $("#routeTable tbody").append(
                                    '<tr class="row" id="newStop"><td colspan="3"><input type="hidden" id="stop_id">' +
                                    '<input type="text" id="stop_search"  class="form-control" data-url="{{ path('tisseo_boa_json_stop') }}"></td><td><input type="checkbox" name="desc" id="descStop"></td>'+
                                    '<td><input type="checkbox" name="asc" id="upStop"></td>'+servicesA+'</tr>'
                            );
                            $('.container-routestop').append(
                                    '<div class="group">' +
                                    '<div class="btn btn-primary" id="add_rs"><span class="glyphicon glyphicon-plus">Ajouter</span></div>'+
                                    '<div class="btn btn-primary" id="cancel_rs"><span class="glyphicon glyphicon-plus">Annuler</span></div>'+
                                    '</div>'
                            );

                            $(".cc").click(function () {
                                var nameTrip = $(this).parent().html().split("<");
                                $.post("{{ path('tisseo_boa_trip_action') }}", {trip: nameTrip[0]}).success( function(data){
                                    $("thead").getRouteStops();
                                });

                            });


                            $("#stop_search").autocomplete({
                                source: function (request, response) {
                                    var objData = {term: request.term};
                                    var url = $(this.element).attr('data-url');

                                    $.ajax({
                                        url: url, dataType: "json", data: objData, type: 'POST',
                                        success: function (data) {

                                            response($.map(JSON.parse(data.content), function (item) {
                                                return {
                                                    label: item.name,
                                                    value: item.name,
                                                    id: item.id
                                                };
                                            }));
                                        }
                                    });
                                },
                                select: function (event, ui) {
                                    $("#stop_id").val(ui.item.id);
                                },
                                minLength: 3,
                                delay: 300
                            });

                            $("#add_rs").click(function () {

                                stptimes = [];
                                $('.stptimes').each(function (key, stoptimes) {

                                   if("{{ mode }}" == "TAD") {

                                       var Trip = {};

                                         if(key%2 == 0){
                                             Trip[$('.stptimes').eq(key).attr("name").toString()] = $('.stptimes').eq(key).val();
                                             stptimes.push(Trip);
                                        }
                                       else {
                                             Trip[$('.stptimes').eq(key).attr("name").toString()] = $('.stptimes').eq(key).val();
                                             stptimes.push(Trip);

                                        }
                                    }
                                    else {

                                        stptimes.push($('.stptimes').eq(key).val());
                                    }
                                $('.stptimes').eq(key).val()

                                });


                                positionStop = $("#routeTable tbody").find("tr").last().attr('id') != 'newStop' ? $("#routeTable tbody").find("tr").last().find("td").eq(1).html() : 0;


                                var routeStop = {
                                    name: $('#stop_search').val(),
                                    id:{{id}},
                                    descStop: $('#descStop').is(':checked'),
                                    upStop: $('#upStop').is(':checked'),
                                    stopId: $("#stop_id").val(),
                                    rank: positionStop,
                                    routeId: $("#routeId").val(),
                                    stoptimes: stptimes,
                                    departures: sizeO,
                                    isZone: "{{ mode }}"
                                };


                                /*
                                 ** si on crée le premier stop ou la première zone
                                 */

                                var code = $('#stop_search').val().indexOf("(") == -1 ? "" : $('#stop_search').val().split("(") ;

                                if(code != ""){
                                    code = code[1].split(")");
                                    code = code[0];
                                }


                                var time = [];


                                $.each(stptimes,function(key,val){
                                    if("{{ mode }}" == "TAD") {
                                        $.each(val, function (key, val) {
                                            time.push("<td>" + val + "</td>");

                                        });
                                    }
                                    else {

                                        time.push("<td>" + val + "</td>");
                                    }
                                });

                                $descStop = $('#descStop').is(':checked') == true ? "Oui" : "Non";
                                $upStop = $('#upStop').is(':checked') == true ? "Oui" : "Non";

                                Lastindex =  $("#routeTable tbody tr").length;

                                $("#routeTable tbody").append(
                                        "<tr><td class='idRS'  name='routestop["+Lastindex+1+"][id]'>"+$("#stop_id").val()+"</td>"+"<td colspan='3' name='routestop["+Lastindex+1+"][stop]'>"+$('#stop_search').val()+
                                        "</td>"+"<td name='routestop["+Lastindex+1+"][code]'>"+code+"</td>"+"<td name='routestop["+Lastindex+1+"][dropoff]'>"+$descStop +"</td>"+
                                        "<td name='routestop["+Lastindex+1+"][pickup]'>"+$upStop+"</td>"+"<td name='routestop["+Lastindex+1+"][stopid]'>"+$("#stop_id").val()+"</td>"+
                                        time+"</tr>"  );
                           });


                            $("#cancel_rs").click(function (){

                                $(".group").html("");
                                $('#routeTable').html("");
                               // voir pour recharger tableau //
                                $('thead').ajaxRouteStops();
                            });

                            $("#saveList").click(function(){

                                $('thead').submit(routeStop);
                            });

                            $("#heading").append("<th></th><th><button class='add-SV btn btn-danger'>+</button></th>");

                        }, 'json')
                                .error(function (err) {
                                    console.log(err);
                                });

                        return this;
                    };

                    $.fn.submit = function(routeStop) {
                        $.ajax({
                            url: "{{ path('tisseo_boa_json_add_routestop') }}",
                            type: 'POST',
                            data: routeStop
                        }).success(function (data) {
                            console.log(data);
                        })
                    };
                    $.fn.loadTab = function() {

                         $('thead').ajaxRouteStops();
                         return this;
                    }

                })(jQuery);



                $("thead").append("<tr></tr>");


                $("thead").ajaxRouteStops();




                $.fn.liveDroppable = function () {
                    $(this).droppable({
                        over: function (event, ui) {

                        },
                        out: function (event, ui) {

                        },
                        drop: function (event, ui) {

                        }
                    });
                };

                $(document).find('#routeTable tbody').liveDroppable();

                var startPos;
                var endPos;
                var order;
                var orderUpdate;
                var startRow;
                var orders = [];


                $("#routeTable tbody").sortable({
                    cursor: "move",
                    start: function (event, ui) {
                        startPos = ui.item.prevAll().length + 1;

                        startRow = $("#routeTable tbody").find("tr").eq(startPos - 1);
                        order = startRow.find('td').eq(1).html();

                        orders = [];
                        orders.push(order);


                    },
                    update: function (event, ui) {

                        endPos = ui.item.prevAll().length + 1;

                        var endRow = $("#routeTable tbody").find("tr").eq(endPos - 1);
                        startRow = $("#routeTable tbody").find("tr").eq(startPos - 1);


                        if (endPos < startPos) {

                            var newPos = $("#routeTable tbody").find("tr").eq(endPos);

                            orderUpdate = newPos.find('td').eq(1).html();

                            endRow.find("td").eq(1).html(newPos.find('td').eq(1).html());

                            newPos.find("td").eq(1).html(orders[0]);

                        }

                        else if (endPos > startPos) {

                            var newPos = $("#routeTable tbody").find("tr").eq(endPos - 2);
                            orderUpdate = newPos.find('td').eq(1).html();

                            endRow.find("td").eq(1).html(newPos.find('td').eq(1).html());
                            newPos.find("td").eq(1).html(orders[0]);

                        }


                    }
                });

                $("#routeTable tbody").on('click', 'tr', function () {
                    $(this).toggleClass("selected");
                    $(this).draggable();
                })
            });


        });
    </script>
{% endblock %}
